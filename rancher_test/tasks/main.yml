- name: Get response from login endpoint using non default password
  uri:
    url: '{{ rancher_url }}/v3-public/localProviders/local?action=login'
    method: POST
    body: {"username": "admin", "password": "{{ rancher_admin_password }}"}
    status_code: 201
    body_format: json
    validate_certs: "{{ validate_certs }}"
  register: login_result
  until: login_result.status == 201
  retries: 10
  delay: 10

- name: Create api key
  uri:
    url: '{{ rancher_url }}/v3/token'
    method: POST
    body: {"current":false, "expired":false, "isDerived":false, "ttl":86400000, "type":"token", "description":"automation"}
    status_code: 201
    body_format: json
    headers:
      Authorization: "Bearer {{ login_result.json.token }}"
    validate_certs: "{{ validate_certs }}"
  register: api_key_result


- name: Get cluster id
  uri:
    url: '{{ rancher_url }}/v3/clusters'
    method: GET
    status_code: 200
    body_format: json
    headers:
      Authorization: "Bearer {{ api_key_result.json.token }}"
    validate_certs: "{{ validate_certs }}"
  register: cluster_result

- name: Create bangwo8 project
  uri:
    url: '{{ rancher_url }}/v3/project?_replace=true'
    method: POST
    body: {"clusterId":"{{cluster_result.json.data[0].id}}", "enableProjectMonitoring": false, "labels":{}, "name":"{{ rancher_project_name }}", "type":"project"}
    status_code: 201
    body_format: json
    headers:
      Authorization: "Bearer {{ api_key_result.json.token }}"
    validate_certs: "{{ validate_certs }}"
  register: project_result

- name: GET project_result
  debug: msg="{{ cluster_result.json.data[0].id }}"

- name: Create namespace bangwo8
  uri:
    url: '{{ rancher_url }}/v3/clusters/{{ cluster_result.json.data[0].id }}/namespace'
    method: POST
    body: {"clusterId":"{{ cluster_result.json.data[0].id }}", "name":"bangwo8", "projectId":"{{ project_result.json.id }}", "resourceQuota":null, "type":"namespace" }
    status_code: 201
    body_format: json
    headers:
      Authorization: "Bearer {{ login_result.json.token }}"
    validate_certs: "{{ validate_certs }}"

- name: Create dockerCredential
  uri:
    url: '{{ rancher_url }}/v3/projects/{{ project_result.json.id }}/dockercredential'
    method: POST
    body: {"name":"aliyun", "type":"dockerCredential", "registries":{registry.cn-beijing.aliyuncs.com:    {"username": "{{ aliyun_username }}", "password":"{{ aliyun_password }}"  }}}
    status_code: 201
    body_format: json
    headers:
      Authorization: "Bearer {{ api_key_result.json.token }}"
    validate_certs: "{{ validate_certs }}"

- name: Create app bangwo8
  uri:
    url: '{{ rancher_url }}/v3/projects/{{ project_result.json.id }}/app'
    method: POST
    body: {"answers":   {}, "externalId": "catalog://?catalog=bangwo8&template=bangwo8&version={{ bangwo8_version }}", "name":"bangwo8", "projectId":"{{ project_result.json.id }}", "prune":false, "targetNamespace": "bangwo8", "type":"app", "valuesYaml":"{{ bangwo8_values }}" }
    status_code: 201
    body_format: json
    headers:
      Authorization: "Bearer {{ login_result.json.token }}"
    validate_certs: "{{ validate_certs }}"
